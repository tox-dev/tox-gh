[tox]
minversion = 4.0.0b2
envlist =
    fix
    py310
    py39
    py38
    py37
    type
    readme
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
package = wheel
wheel_build_env = .pkg
extras =
    test
setenv =
    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
commands =
    pytest {tty:--color=yes} {posargs: \
      --cov {envsitepackagesdir}{/}tox_gh --cov {toxinidir}{/}tests --cov-fail-under=95 --cov-context=test \
      --no-cov-on-fail  --cov-config {toxinidir}{/}setup.cfg \
      --cov-report term-missing:skip-covered  --junitxml {toxworkdir}{/}junit.{envname}.xml \
      --cov-report html:{envtmpdir}{/}htmlcov \
      tests}

[testenv:fix]
description = run static analysis and style check using flake8
skip_install = true
deps =
    pre-commit>=3.2
passenv =
    HOMEPATH
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
deps =
    mypy==1.1.1
    types-docutils>=0.19.1.6
setenv =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy src {posargs}
    mypy tests {posargs}

[testenv:readme]
description = check that the package metadata is correct
skip_install = true
deps =
    build[virtualenv]>=0.10
    twine>=4.0.2
setenv =
    {tty:FORCE_COLOR = 1}
changedir = {toxinidir}
commands =
    python -m build --sdist --wheel -o {envtmpdir} .
    twine check {envtmpdir}{/}*

[testenv:dev]
description = generate a DEV environment
usedevelop = true
extras =
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[gh]
python =
    3.6 = py36
    3.7 = py37
    3.8 = py38
    3.9 = py39, type, dev, readme
    3.10 = py310
